--CREATE TYPE VOTE_t as ENUM('Economic', 'Delicious', 'Popular');

CREATE TABLE Users (
    UserId              SERIAL PRIMARY KEY,
    UserAccount         TEXT NOT NULL UNIQUE,
    UserName            TEXT NOT NULL,
    UserPassword        TEXT NOT NULL,
    UserDescription     TEXT NOT NULL,
    UserBackgroundImage TEXT NOT NULL,
    UserPhoto           TEXT NOT NULL
);
CREATE TABLE Schedules (
    ScheduleId          SERIAL PRIMARY KEY,
    OwnerId             INT NOT NULL,
    ScheduleName        TEXT NOT NULL,
    ScheduleDescription TEXT NOT NULL,
    ScheduleImage       TEXT NOT NULL,
    StartDate           DATE NOT NULL,
    EndDate             DATE NOT NULL,
    Public              BOOLEAN NOT NULL,
    HasCredits          BOOLEAN NOT NULL,
    CreateTimeStamp     TimeStamp,
    
    FOREIGN KEY (OwnerId) REFERENCES Users (UserId) ON DELETE CASCADE
);
CREATE TABLE Events (
    EventId             SERIAL PRIMARY KEY,
    ScheduleId          INT NOT NULL,
    EventOnDay          INT NOT NULL,
    EventOrder          INT NOT NULL,
    StayTime            TIME NOT NULL,
    EventName           TEXT NOT NULL,
    EventPhoto          TEXT NOT NULL,
    Info                TEXT NOT NULL,
    Traffic             TEXT,
    
    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE,
    UNIQUE (ScheduleId, EventOnDay, EventOrder)
);
CREATE TABLE Votes (
    id                  SERIAL PRIMARY KEY,
    UserId              INT NOT NULL,
    ScheduleId          INT NOT NULL,
    Vote                TEXT NOT NULL,
    Stamp               TIMESTAMP NOT NULL,
    
    UNIQUE (UserId, ScheduleId, Vote),
    FOREIGN KEY (UserId) REFERENCES Users (UserId) ON DELETE CASCADE,
    FOREIGN KEY (ScheduleId) REFERENCES Schedules (ScheduleId) ON DELETE CASCADE
);

CREATE TABLE Members (
    id                  SERIAL PRIMARY KEY,
    ScheduleId          INT NOT NULL,
    UserId              INT NOT NULL,
    Budget              INT NOT NULL,
    
    FOREIGN KEY (ScheduleId) REFERENCES Schedules (ScheduleId) ON DELETE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    UNIQUE(ScheduleId, UserId)
);
CREATE TABLE Notifications (
    UserId                      INT NOT NULL,
    GeneralNotification         BOOLEAN NOT NULL,
    InvitationNotification      BOOLEAN NOT NULL, 
    LoanNotification            BOOLEAN NOT NULL,
    DebtNotification            BOOLEAN NOT NULL,
    NewCreditNotification       BOOLEAN NOT NULL,
    NoteNotification            BOOLEAN NOT NULL,

    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    UNIQUE (UserId)
);
CREATE TABLE Archives (
    id                  SERIAL PRIMARY KEY,
    UserId              INT,
    ScheduleId          INT,

    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE,
    UNIQUE (UserId, ScheduleId)
);
CREATE TABLE EventCosts (
    id                  SERIAL PRIMARY KEY,
    UserId              INT NOT NULL,
    EventId             INT NOT NULL,
    Cost                INT NOT NULL,

    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (EventId) REFERENCES Events(EventId) ON DELETE CASCADE,
    UNIQUE (UserId, EventId)
);

CREATE TABLE Followings (
    id                  SERIAL PRIMARY KEY,
    UserId              INT NOT NULL,
    FollowingId         INT NOT NULL,
    
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (FollowingId) REFERENCES Users (UserId) ON DELETE CASCADE,
    UNIQUE(UserId, FollowingId)
);CREATE TABLE Tags (
    id                  SERIAL PRIMARY KEY,
    ScheduleId          INT NOT NULL,
    Tag                 TEXT NOT NULL,

    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE
);CREATE TABLE Notes (
    id                  SERIAL PRIMARY KEY,
    ScheduleId          INT,
    UserId              INT,
    Content             TEXT,
    Colour              TEXT,
    CreateTimeStamp     TimeStamp,

    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE,
    FOREIGN kEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE
); CREATE TABLE ScheduleStartTimes (
    id                  SERIAL PRIMARY KEY,
    ScheduleId          INT NOT NULL,
    OnDay               INT NOT NULL,
    StartTime           TIME NOT NULL,

    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE,
    UNIQUE (ScheduleId, OnDay)
);CREATE TABLE Credits (
    CreditId            SERIAL PRIMARY KEY,
    ScheduleId          INT NOT NULL,
    UserId              INT NOT NULL,
    Amount              INT NOT NULL,
    Stat                BOOLEAN NOT NULL,
    CreateDate          DATE NOT NULL,
    Description         TEXT,
    
    FOREIGN KEY (ScheduleId) REFERENCES Schedules(ScheduleId) ON DELETE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users (UserId) ON DELETE CASCADE
);CREATE TABLE InCharges (
    id                  SERIAL PRIMARY KEY,
    UserId              INT,
    CreditId            INT,

    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (CreditId) REFERENCES Credits(CreditId) ON DELETE CASCADE,
    UNIQUE (UserId, CreditId)
);